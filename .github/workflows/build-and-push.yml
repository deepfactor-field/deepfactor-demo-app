# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    #branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    #branches: [ "main" ]
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            dmdeepfactor/deepfactor-demo-app
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      
      # Login to Docker registry
      -
        name: Login to DockerHub
        if: github.event_name != 'push_tag'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      # Install yq
      - 
        name: Install yq 
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.12.0/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq
          yq --version
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'push_tag' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


      # Clone git repository, update deployment files and push changes
      - 
        name: Update image tag in git repo 
        run: | 
          TEMP_FOLDER="$(mktemp -d)" 
          echo Clone the repository...
          git clone -b main "https://dmdeepfactor:${GIT_ACCESS_TOKEN}@github.com/deepfactor-field/deepfactor-demo-app.git" ${TEMP_FOLDER} 
          cd ${TEMP_FOLDER}/k8s 
          ls
          echo update deployment files with new image tag
          


      
